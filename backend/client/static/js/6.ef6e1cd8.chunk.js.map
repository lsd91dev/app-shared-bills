{"version":3,"sources":["Shared/components/loading/Loading.tsx","Shared/components/error-form/ErrorForm.tsx","Services/participant/newParticipant.tsx","Pages/Participant/New/NewParticipant.tsx"],"names":["Loading","loading","message","className","ErrorForm","newParticipant","participant","a","fetch","process","getRequestOptions","response","json","method","payload","headers","body","JSON","stringify","NewParticipant","id","useParams","useForm","register","handleSubmit","errors","formState","reset","setResponsePayment","useContext","ResponsePaymentContext","useState","setLoading","loadingObject","onSubmit","data","e","preventDefault","setTimeout","participantDTO","payment_id","payment","console","log","autoComplete","type","required","placeholder","htmlFor","name","amount"],"mappings":"+HAGA,mDAEaA,EAAU,SAAC,GAAoD,IAAhDC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,QACjC,OACI,qBAAKC,UAAU,UAAf,SACI,sBAAKA,UAAU,eAAf,UACEF,GAAW,oBAAGE,UAAU,gBAAb,cAAgCD,EAAhC,OACb,oDAAsB,sBAAMC,UAAU,aAAhB,iBAAtB,c,qDCPZ,mDAEaC,EAAY,SAAC,GAAuC,IAApCF,EAAmC,EAAnCA,QACzB,OACI,qBAAKC,UAAU,cAAf,SACI,kCAAMD,EAAN,W,kMCLCG,EAAc,uCAAG,WAAQC,GAAR,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHVC,wBAGU,oBAAuCC,EAAkB,OAAQJ,IADvE,cAChBK,EADgB,yBAEfA,EAASC,QAFM,2CAAH,sDAMrBF,EAAoB,SAACG,EAAgBC,GACvC,MAAO,CACHD,SACAE,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAWJ,K,sCCDjBK,EAAiB,WAAO,IAAD,IAC1BC,EAAQC,cAARD,GAEN,EAAgEE,cAAzDC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAA2BC,EAA5C,EAA+BC,UAAaD,OAAUE,EAAtD,EAAsDA,MAC9CC,EAAuBC,qBAAWC,KAAlCF,mBAGR,EAAgCG,oBAAW,GAA3C,mBAAQ9B,EAAR,KAAiB+B,EAAjB,KAEMC,EAAgB,CAClBhC,UACAC,QAAS,kBAuBb,OACI,sBAAKC,UAAU,UAAf,UAEMF,GAAW,cAACD,EAAA,EAAD,eAAciC,IAE3B,uBACI9B,UAAU,cACV+B,SAAWV,GA3BN,SAAEW,EAAWC,GAC1BA,EAAEC,iBACFL,GAAY,GACZM,WAAU,sBAAE,gCAAA/B,EAAA,sEAEEgC,EAFF,aAGAC,WAAapB,GACVe,GAJH,SAMsB9B,EAAgBkC,GANtC,gBAMIE,EANJ,EAMIA,QACRb,EAAmB,CAAEO,KAAMM,IAC3BT,GAAW,GACXL,IATI,kDAWJe,QAAQC,IAAR,MACAX,GAAW,GAZP,0DAcT,SAWKY,aAAa,MAHjB,UAKI,sBAAKzC,UAAU,cAAf,UACI,+CACI0C,KAAK,OACLzB,GAAG,QACCG,EAAS,OAAQ,CAAEuB,UAAU,KAHrC,IAIIC,YAAY,gBACZ5C,UAAU,iBAEd,uBACI6C,QAAQ,OACR7C,UAAU,cAFd,4BAIEsB,EAAOwB,MAAQ,cAAE7C,EAAA,EAAF,CAAYF,QAAQ,sBAG7C,sBAAKC,UAAU,cAAf,UACI,+CACI0C,KAAK,QACDtB,EAAS,SAAU,CAAEuB,UAAU,KAFvC,IAGIC,YAAY,KACZ5C,UAAU,iBAEd,uBACI6C,QAAQ,SACR7C,UAAU,cAFd,qBAKsB,cAAxB,UAAAsB,EAAOyB,cAAP,eAAeL,OAAuB,cAAEzC,EAAA,EAAF,CAAYF,QAAQ,mBAClC,aAAxB,UAAAuB,EAAOyB,cAAP,eAAeL,OAAsB,cAAEzC,EAAA,EAAF,CAAYF,QAAQ,2BAI3D,wBAAQC,UAAU,eAAlB","file":"static/js/6.ef6e1cd8.chunk.js","sourcesContent":["import { ReactElement } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.css';\r\n\r\nexport const Loading = (  { loading, message }  : any ) : ReactElement  => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading__box\">\r\n            { loading && <p className=\"loading__text\"> { message } </p> }\r\n            <p>Please wait just a <span className=\"blink-text\">few</span>.</p>     \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nLoading.propTypes = {\r\n    stateLoading : PropTypes.object\r\n}","import { ReactElement } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './index.css';\r\n\r\nexport const ErrorForm = ( { message } : any ): ReactElement => {\r\n    return (\r\n        <div className=\"form__error\">\r\n            <p> { message } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nErrorForm.propTypes = {\r\n    message : PropTypes.string\r\n}","import { ParticipantInterface } from \"../../Interfaces/participant.interface\";\r\nconst { REACT_APP_URL } = process.env;\r\n\r\nexport const newParticipant = async ( participant  : ParticipantInterface ) => {\r\n        const response = await fetch(`${ REACT_APP_URL }/participant/new`, getRequestOptions('POST', participant ) );\r\n        return response.json();\r\n}\r\n\r\n\r\nconst getRequestOptions = (method: string, payload: any): {} => {\r\n    return {\r\n        method,\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify( payload )\r\n    }\r\n}","import { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { Loading } from '../../../Shared/components/loading/Loading';\r\nimport { newParticipant } from \"../../../Services/participant/newParticipant\";\r\nimport { ResponsePaymentContext } from '../../../Providers/Response/response.payment.provider';\r\n\r\nimport './index.css'\r\nimport { ErrorForm } from '../../../Shared/components/error-form/ErrorForm';\r\nimport { ParticipantInterface } from '../../../Interfaces/participant.interface';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const NewParticipant = () => {\r\n    let { id }  = useParams<{ id: string }>();\r\n    \r\n    const {register, handleSubmit, formState: { errors }, reset } = useForm<ParticipantInterface>();\r\n    const { setResponsePayment } = useContext(ResponsePaymentContext);\r\n    // const [ errorsResponse, setErrors ] = useState();\r\n    \r\n    const [ loading, setLoading ] = useState(  false )\r\n    \r\n    const loadingObject = {\r\n        loading,\r\n        message: 'Adding friend.'\r\n    }\r\n\r\n    const onSubmit = ( data: any, e: any ) => {\r\n        e.preventDefault();\r\n        setLoading( true );\r\n        setTimeout( async () => {\r\n            try {\r\n                const participantDTO : ParticipantInterface = {\r\n                    payment_id : id,\r\n                    ...data\r\n                }\r\n                const { payment } = await newParticipant( participantDTO );\r\n                setResponsePayment({ data: payment });\r\n                setLoading(false);\r\n                reset();\r\n            }catch( error ){\r\n                console.log( error );\r\n                setLoading(false);\r\n            }\r\n        }, 1500 )\r\n}\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n\r\n            { loading && <Loading { ...loadingObject } /> }\r\n\r\n            <form \r\n                className=\"form fadeIn\" \r\n                onSubmit={ handleSubmit(onSubmit) }\r\n                autoComplete=\"off\"\r\n            >\r\n                <div className=\"form__group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"name\"\r\n                        {...register('name', { required: true } ) }\r\n                        placeholder=\"e.g. John Doe\"\r\n                        className=\"form__input\"\r\n                    />\r\n                    <label \r\n                        htmlFor=\"name\"\r\n                        className=\"form__label\"> Friend's name \r\n                    </label>\r\n                    { errors.name && < ErrorForm message=\"Field required\" /> }\r\n                </div> \r\n            \r\n            <div className=\"form__group\">\r\n                <input \r\n                    type=\"text\"  \r\n                    {...register(\"amount\", { required: true } ) }\r\n                    placeholder=\"10\"\r\n                    className=\"form__input\"\r\n                />  \r\n                <label \r\n                    htmlFor=\"amount\"\r\n                    className=\"form__label\"\r\n                    > Amount \r\n                    </label>\r\n            { errors.amount?.type === 'required' && < ErrorForm message=\"Field required\" /> }\r\n            { errors.amount?.type === 'pattern' && < ErrorForm message=\"Only number allowed\" /> }\r\n            </div>\r\n\r\n\r\n            <button className=\"form__button\"> Add friend </button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}